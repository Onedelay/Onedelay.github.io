{"meta":{"title":"Blog","subtitle":"공부한것들 정리하는 블로그","description":null,"author":"Onedelay","url":"https://Onedelay.github.io"},"pages":[{"title":"","date":"2018-10-26T07:35:01.412Z","updated":"2018-10-26T07:35:01.412Z","comments":true,"path":"about/index.html","permalink":"https://Onedelay.github.io/about/index.html","excerpt":"","text":"About공부한 내용들을 정리하는 블로그입니다. 현재 티스토리 블로그에서 이전중입니다. E-mail : wjy0218@gmail.com Github : https://github.com/Onedelay Portfolio : https://github.com/Onedelay/Portfolio"}],"posts":[{"title":"[Kotlin] 새차원의 코틀린 강좌(1)","slug":"Kotlin-새차원의-코틀린-강좌-1","date":"2018-10-26T08:20:02.000Z","updated":"2018-10-26T08:23:51.420Z","comments":true,"path":"2018/10/26/Kotlin-새차원의-코틀린-강좌-1/","link":"","permalink":"https://Onedelay.github.io/2018/10/26/Kotlin-새차원의-코틀린-강좌-1/","excerpt":"","text":"새차원의 코틀린 강좌 - Why Kotlin멀티 플랫폼에서 개발할 수 있다.JVM, Android, JS(웹브라우저), Native(서버 곧 지원) Why kotlin Concise 코틀린은 문법 자체가 간결하다. 코드 길이가 짧은 건 무조건 좋다 나쁘다라고 단정할 수는 없는 부분이지만, 코드가 간결해지면 유지보수를 조금 더 편하게 할 수 있다. 또한 자바는 보통 정해진 원칙을 엄격하게 따르면서 쓰는데, 코틀린은 좀 더 다양하게 표현을 확장할 수 있다. Rx 같은 함수 프로그래밍을 할 때면 복잡한 람다식을 사용하는 경우가 많은데, 코틀린을 활용하면 람다식을 보다 간편하게 활용할 수 있다. 김상우 개발자는 “코틀린으로 작성해 기존 자바 코드보다 절반에서 최대 4분의 1로 코드를 줄인 적도 있다”라고 설명했다. Safe 언어 레벨에서 NPE를 안전하게 처리할 수 있다. null 자체가 허용되지 않아 새로운 타입 ?(Nullable)을 제공한다. 또한 auto-cast를 이용해 캐스팅 오류도 줄여준다. 123fun calculateTotal(obj: Any) &#123; if (obj is Invoice) obj.calculateTotal()&#125; Interoperable 자바와 100% 함께 운용 가능하다. (예전에 배울땐 99%였는데, 병렬 처리 쪽이었던걸로 기억한다.) 프로젝트 내에 코틀린 파일과 자바파일이 함께 있어도 문제 없이 동작한다. Tool-friendly 안드로이드 스튜디오와 친숙하다(?) GDE들의 코틀린에 대한 답변 코틀린을 사용함으로써 내 코드는 간단하고 더 좋아졌다. 코틀린은 가끔씩 내가 10명의 개발자인 것 같이 느끼게 해준다. 코틀린은 정체된 안드로이드 세상을 위한 진정한 게임 체인저이다. 자바/안드로이드 개발자들에겐 러닝 커브가 상당히 낮다. 당신이 코틀린으로 프로그래밍 하기 시작했다면 더 이상 자바를 쓰기 싫어질 것이다. (이거 레알!) 코틀린은 성능이나 안정성의 희생 없이도 자바보다 좀 더 간결하고 이해하기 쉬운 코드를 만들도록 해준다. 코틀린은 생산성을 높여주고 당신을 중장기적으로 좀 더 나은 개발자로 만들어 줄 것이다. 코틀린 사용하기코틀린 공식 홈페이지 에서 가볍게 돌려봐도 되고, jdk 1.8 설치 후 InteliJ Community 버전으로 설치하면 된다. 안드로이드 스튜디오의 경우에는 3 이상 버전부터 코틀린이 기본적으로 탑재되어있고, 이전 버전은 코틀린 플러그인을 설치하기만 하면 된다. 출처 : 새차원의 코틀린 강좌 https://www.inflearn.com/course/%EC%BD%94%ED%8B%80%EB%A6%B0-%EA%B0%95%EC%A2%8C-%EC%83%88%EC%B0%A8%EC%9B%90/","categories":[{"name":"Language","slug":"Language","permalink":"https://Onedelay.github.io/categories/Language/"},{"name":"강의정리노트","slug":"Language/강의정리노트","permalink":"https://Onedelay.github.io/categories/Language/강의정리노트/"}],"tags":[{"name":"kotlin","slug":"kotlin","permalink":"https://Onedelay.github.io/tags/kotlin/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-26T03:39:57.806Z","updated":"2018-10-26T03:39:57.807Z","comments":true,"path":"2018/10/26/hello-world/","link":"","permalink":"https://Onedelay.github.io/2018/10/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}